CREATE DATABASE zomato_project;
USE zomato_project;
CREATE TABLE Customers(
	Customer_id INT Primary Key,
    Name VARCHAR(100) NOT NULL,
    Email VARCHAR(100) NOT NULL,
    City VARCHAR(100) NOT NULL,
    Registration_date date
    );
CREATE TABLE Restaurants(
	Restaurants_id INT PRIMARY KEY,
    Name VARCHAR(100) NOT NULL,
    Cuisine VARCHAR(100) NOT NULL,
    City VARCHAR(100) NOT NULL,
    Rating Decimal(2,1),
    Delivary_Time_Minutes int
    );
CREATE TABLE Menu_item(
	item_id INT PRIMARY KEY,
    Restaurants_id INT NOT NULL,
    item_name VARCHAR(100) NOT NULL,
    Price Decimal(6,2),
    FOREIGN KEY(Restaurants_id) REFERENCES Restaurants(Restaurants_id)
    );
CREATE TABLE Orders(
	order_id INT PRIMARY KEY,
    Customer_id INT NOT NULL,
    Restaurants_id INT NOT NULL,
    order_date DATE,
    delivary_status VARCHAR(20) NOT NULL,
    Total_Amount Decimal(6,2),
    FOREIGN KEY(Customer_id) REFERENCES Customers(Customer_id),
	FOREIGN KEY(Restaurants_id) REFERENCES Restaurants(Restaurants_id)
    );
CREATE TABLE order_details(
	order_detail_id INT PRIMARY KEY,
    order_id INT NOT NULL,
    item_id INT NOT NULL,
    Quantity INT,
    foreign key(order_id) references Orders(order_id),
    foreign key(item_id) references Menu_item(item_id)
    );
INSERT INTO Customers VALUES 
( 1, "Aarav Mehta", "aarav@gmail.com", "Mumbai", "2023-01-15"),
( 2, "Neha Sharma", "neha@gmail.com", "Delhi", "2022-12-10"),
( 3, "Rohan Joshi", "rohan@gmail.com", "Banglore", "2023-03-21"),
( 4, "Isha Kapoor", "isha@gmail.com", "Mumbai", "2023-02-11"),
( 5, "Ankit Detai", "ankit@gmail.com", "Pune", "2023-04-05");
SELECT* FROM Customers;

INSERT INTO Restaurants VALUES
(1, "Tandoori Treats", "North Indian", "Mumbai", 4.5, 30),
(2, "Sushi World", "Japanese", "Delhi", 4.2, 45),
(3, "Burger House", "Fast Food", "Banglore", 3.8, 25),
(4, "Green Bowl", "Healthy", "Pune", 4.7, 35),
(5, "Pizza Hub", "Italian", "Mumbai", 4.0, 40);
SELECT*FROM Restaurants;

INSERT INTO Menu_item VALUES
(1, 1, "Paneer Tikka", 250.00),
(2, 1, "Butter Chiken", 320.00),
(3, 2, "Salmon Sushi", 450.00),
(4, 1, "Tempura", 300.00),
(5, 1, "Veg Burger", 150.00),
(6, 1, "Chiken Burger", 180.00),
(7, 1, "Quinoa Salad", 200.00),
(8, 1, "Grilled Tofu Bowl", 220.00),
(9, 1, "Margherita Pizza", 270.00),
(10, 1, "Farmahouse Pizza", 310.00);

INSERT INTO Orders VALUES
(101, 1,1,"2023-04-10","Delivered",570.00),
(102,2,2,"2023-04-11","Delivered",750.00),
(103,3,3,"2023-04-12","Cancelled",330.00),
(104,4,4,"2023-04-13","Delivered",420.00),
(105,5,5,"2023-04-14","Delivered",580.00);

INSERT INTO order_details VALUES
(1,101,1,1),
(2,101,2,1),
(3,102,3,1),
(4,102,4,1),
(5,103,5,2),
(6,104,7,1),
(7,104,8,1),
(8,105,9,1),
(9,105,10,1);
SELECT*FROM order_details;

#Understand premium pricing items across all restaurants.
SELECT item_id,Price
FROM Menu_item
ORDER BY price DESC
LIMIT 3;

#Total Revenue Generated by Each Restaurant
SELECT r.name AS restaurant_name, SUM(o.Total_Amount) AS total_revenue
FROM Orders o
JOIN restaurants r ON o.Restaurants_id = r.Restaurants_id
WHERE o.delivary_status = 'Delivered'
GROUP BY r.name
ORDER BY total_revenue DESC;

#Most Ordered Food Items (by quantity)
SELECT mi.item_name, SUM(od.quantity) AS total_ordered
FROM order_details od
JOIN Menu_item mi ON od.item_id = mi.item_id
GROUP BY mi.item_name
ORDER BY total_ordered DESC;

#City-wise Customer Count
SELECT city, COUNT(*) AS customer_count
FROM customers
GROUP BY city
ORDER BY customer_count DESC;

#Cancelled Orders List
SELECT o.order_id, c.name AS customer_name, r.name AS restaurant_name, o.order_date
FROM orders o
JOIN customers c ON o.customer_id = c.customer_id
JOIN restaurants r ON o.Restaurants_id = r.Restaurants_id
WHERE o.delivary_status = 'Cancelled';

 #Average Order Value (AOV)
 SELECT ROUND(AVG(total_amount), 2) AS average_order_value
FROM orders
WHERE delivary_status = 'Delivered';
